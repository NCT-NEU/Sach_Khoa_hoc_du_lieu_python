Traceback (most recent call last):
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\AD\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.model_selection import GridSearchCV

param_grid = {
    'n_estimators': [20, 50, 100],
    'max_depth': [None, 10, 20],
    'min_samples_split': [None, 2, 5, 10],
    'min_samples_leaf': [None, 1, 2, 4],
    'max_features': [None, 'sqrt', 10]
}

grid_search = GridSearchCV(
    RandomForestRegressor(random_state=0),
    param_grid,
    cv=5,
    scoring='neg_root_mean_squared_error',
    n_jobs=-1
)

grid_search.fit(X_train, y_train)
print(grid_search.best_estimator_)
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[66][39m[32m, line 12[39m
[32m      1[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msklearn[39;00m[34;01m.[39;00m[34;01mmodel_selection[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m GridSearchCV
[32m      3[39m param_grid = {
[32m      4[39m     [33m'[39m[33mn_estimators[39m[33m'[39m: [[32m20[39m, [32m50[39m, [32m100[39m],
[32m      5[39m     [33m'[39m[33mmax_depth[39m[33m'[39m: [[38;5;28;01mNone[39;00m, [32m10[39m, [32m20[39m],
[32m   (...)[39m[32m      8[39m     [33m'[39m[33mmax_features[39m[33m'[39m: [[38;5;28;01mNone[39;00m, [33m'[39m[33msqrt[39m[33m'[39m, [32m10[39m]
[32m      9[39m }
[32m     11[39m grid_search = GridSearchCV(
[32m---> [39m[32m12[39m     [43mRandomForestRegressor[49m(random_state=[32m0[39m),
[32m     13[39m     param_grid,
[32m     14[39m     cv=[32m5[39m,
[32m     15[39m     scoring=[33m'[39m[33mneg_root_mean_squared_error[39m[33m'[39m,
[32m     16[39m     n_jobs=-[32m1[39m
[32m     17[39m )
[32m     19[39m grid_search.fit(X_train, y_train)
[32m     20[39m [38;5;28mprint[39m(grid_search.best_estimator_)

[31mNameError[39m: name 'RandomForestRegressor' is not defined

